<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TPZv1T1ColVnDDUAAAAASUVORK5CYII=
</value>
  </data>
</root>